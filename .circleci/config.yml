# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/buildpack-deps:bionic

    working_directory: ~/foo_ws

    steps:
      - run:
          name: Install ROS Base
          command: |
            lscpu
            sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu bionic main" > /etc/apt/sources.list.d/ros-latest.list'
            curl -sSL 'http://keyserver.ubuntu.com/pks/lookup?op=get&search=0xC1CF6E31E6BADE8868B172B4F42ED6FBAB17C654' | sudo apt-key add -
            sudo apt update
            sudo apt install ros-melodic-ros-base
            sudo rosdep init
            rosdep update
            echo "source /opt/ros/melodic/setup.bash" >> ~/.bashrc
            source ~/.bashrc
            sudo apt install python-rosinstall python-rosinstall-generator python-wstool build-essential
            mkdir src
      - checkout:
          path: src/ee134

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: Install Dependencies
          command: |
            cd src
            pwd
            ls
            wstool init . ee134/dependencies.rosinstall
            git --git-dir=ee134/.git rev-parse HEAD
            cd ..
            . /opt/ros/melodic/setup.bash
            rosdep install --from-paths src --ignore-src -r -y
      - run:
          name: Build Code
          command: |
            . /opt/ros/melodic/setup.bash
            catkin_make -j2
      - run:
          name: Test Code
          command: |
            . devel/setup.bash
            cd src/ee134/hockbot
            sudo apt install python-pytest
            pytest

      - store_artifacts:
          path: test-reports
          destination: test-reports
